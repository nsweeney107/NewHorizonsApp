#pragma checksum "C:\Users\NateDev\Documents\Visual Studio 2017\Projects\NewHorizonApp\NewHorizonApp\Views\WebView.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "5AD6091B5B474C0422A0648C0D32030B"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewHorizonApp.Views
{
    partial class WebView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class WebView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IWebView_Bindings
        {
            private global::NewHorizonApp.Views.WebView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;

            private WebView_obj1_BindingsTracking bindingsTracking;

            public WebView_obj1_Bindings()
            {
                this.bindingsTracking = new WebView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IWebView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // WebView_obj1_Bindings

            public void SetDataRoot(global::NewHorizonApp.Views.WebView newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::NewHorizonApp.Views.WebView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::NewHorizonApp.ViewModel.MainViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UriName(obj.UriName, phase);
                    }
                }
            }
            private void Update_ViewModel_UriName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                }
            }

            private class WebView_obj1_BindingsTracking
            {
                global::System.WeakReference<WebView_obj1_Bindings> WeakRefToBindingObj; 

                public WebView_obj1_BindingsTracking(WebView_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<WebView_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    WebView_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::NewHorizonApp.ViewModel.MainViewModel obj = sender as global::NewHorizonApp.ViewModel.MainViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ViewModel_UriName(obj.UriName, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "UriName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_UriName(obj.UriName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::NewHorizonApp.ViewModel.MainViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::NewHorizonApp.ViewModel.MainViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.TopCommandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                    #line 18 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.CommandBar)this.TopCommandBar).Opening += this.TopCommandBar_Opening;
                    #line 19 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.CommandBar)this.TopCommandBar).Closing += this.TopCommandBar_Closing;
                    #line default
                }
                break;
            case 3:
                {
                    this.MainWebView = (global::Windows.UI.Xaml.Controls.WebView)(target);
                }
                break;
            case 4:
                {
                    this.HomeButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    #line 23 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.HomeButton).Click += this.HomeButton_Click;
                    #line default
                }
                break;
            case 5:
                {
                    this.BackButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    #line 27 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.BackButton).Click += this.BackButton_Click;
                    #line default
                }
                break;
            case 6:
                {
                    this.ForwardButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    #line 31 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.ForwardButton).Click += this.ForwardButton_Click;
                    #line default
                }
                break;
            case 7:
                {
                    this.StopButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    #line 35 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.StopButton).Click += this.StopButton_Click;
                    #line default
                }
                break;
            case 8:
                {
                    this.RefreshButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    #line 39 "..\..\..\Views\WebView.xaml"
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.RefreshButton).Click += this.RefreshButton_Click;
                    #line default
                }
                break;
            case 9:
                {
                    this.UrlTextBlock = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    WebView_obj1_Bindings bindings = new WebView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

